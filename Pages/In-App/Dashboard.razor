@page "/in-app"
@inject NavigationManager NavigationManager
@inject HttpClient HttpClient

<div class="dashboard-container row-layout">
    <div class="group_4 row-layout">
        <div class="group_1 column-layout">
            <div class="group column-layout">
                <div class="group_2 column-layout">
                    <h4 class="h4">
                        Hi, Sarah!
                    </h4>
                    <p class="typography__subtitle-1 text">
                        We have some great suggestions for your next travel! We've searched the whole web to provide you with these rare findings - special for you!
                    </p>
                </div>
            </div>
            <div class="group_6 column-layout">
                <div class="group_13 row-layout">
                    <h6 class="h6">
                        Latest in articles
                    </h6>
                    <IgbButton Variant="ButtonVariant.Outlined" @onclick="@(e => Navigate("/in-app/articles"))" class="button" dashboard-scope>
                        view all ARTICLES
                        <IgbRipple></IgbRipple>
                    </IgbButton>
                </div>
                <div class="group_14 group_16 row-layout">
                    @foreach (var item in travelAppSelectedArticles)
                    {
                        <IgbCard Outlined="true" class="card" dashboard-scope>
                            <IgbCardMedia>
                                <img src="@item.Image_url" />
                            </IgbCardMedia>
                            <IgbCardHeader>
                                <h3 slot="title">
                                    @item.Title
                                </h3>
                                <h5 slot="subtitle">
                                    @item.Subtitle
                                </h5>
                            </IgbCardHeader>
                            <IgbCardActions class="actions-content" dashboard-scope>
                                <IgbButton Variant="ButtonVariant.Flat">
                                    <span class="material-icons">
                                        bookmark_border
                                    </span>
                                    <IgbRipple></IgbRipple>
                                </IgbButton>
                                <IgbButton Variant="ButtonVariant.Flat">
                                    <span class="material-icons">
                                        share
                                    </span>
                                    <IgbRipple></IgbRipple>
                                </IgbButton>
                                <IgbButton Variant="ButtonVariant.Outlined" class="button_1" dashboard-scope>
                                    read
                                    <IgbRipple></IgbRipple>
                                </IgbButton>
                            </IgbCardActions>
                        </IgbCard>
                    }
                    <div class="group_10 column-layout">
                        <IgbButton Variant="ButtonVariant.Outlined" @onclick="@(e => Navigate("/in-app/articles"))" class="button_1" dashboard-scope>
                            VIEW ALL
                            <IgbRipple></IgbRipple>
                        </IgbButton>
                    </div>
                </div>
            </div>
            <div class="group_7 column-layout">
                <div class="group_13 group_16 row-layout">
                    <h6 class="h6">
                        Destinations
                    </h6>
                    <IgbButton Variant="ButtonVariant.Outlined" class="button" dashboard-scope>
                        VIEW ALL DESTINATIONS
                        <IgbRipple></IgbRipple>
                    </IgbButton>
                </div>
                <div class="group_14 group_16 row-layout">
                    @foreach (var item in travelAppDestinations)
                    {
                        <IgbCard Outlined="true" class="card" dashboard-scope>
                            <IgbCardMedia>
                                <img src="@item.Image_url" />
                            </IgbCardMedia>
                            <IgbCardHeader>
                                <h3 slot="title">
                                    @item.Title
                                </h3>
                                <h5 slot="subtitle">
                                     
                                </h5>
                            </IgbCardHeader>
                            <IgbCardActions class="actions-content" dashboard-scope>
                                <IgbButton Variant="ButtonVariant.Flat">
                                    <span class="material-icons">
                                        bookmark_border
                                    </span>
                                    <IgbRipple></IgbRipple>
                                </IgbButton>
                                <IgbButton Variant="ButtonVariant.Flat">
                                    <span class="material-icons">
                                        share
                                    </span>
                                    <IgbRipple></IgbRipple>
                                </IgbButton>
                                <IgbButton Variant="ButtonVariant.Outlined" class="button_1" dashboard-scope>
                                    view
                                    <IgbRipple></IgbRipple>
                                </IgbButton>
                            </IgbCardActions>
                        </IgbCard>
                    }
                    <div class="group_10 column-layout">
                        <IgbButton Variant="ButtonVariant.Outlined" class="button_1" dashboard-scope>
                            discover more
                            <IgbRipple></IgbRipple>
                        </IgbButton>
                    </div>
                </div>
            </div>
            <div class="group_11 column-layout">
                <div class="group_13 group_16 row-layout">
                    <h6 class="h6">
                        My travel lists
                    </h6>
                    <IgbButton Variant="ButtonVariant.Outlined" class="button" dashboard-scope>
                        VIEW ALL LISTS
                        <IgbRipple></IgbRipple>
                    </IgbButton>
                </div>
                <div class="group_14 row-layout">
                    <IgbDataGrid DataSource="northwindProducts" Density="ControlDisplayDensity.Cosy" AutoGenerateColumns="false" SelectionMode="GridSelectionMode.None" Width="100%" Height="200px" DefaultColumnMinWidth="136" class="grid" dashboard-scope>
                        <IgbNumericColumn HeaderText="productID" Field="ProductID" IsFilteringEnabled="true"></IgbNumericColumn>
                        <IgbNumericColumn HeaderText="supplierID" Field="SupplierID" IsFilteringEnabled="true"></IgbNumericColumn>
                        <IgbNumericColumn HeaderText="categoryID" Field="CategoryID" IsFilteringEnabled="true"></IgbNumericColumn>
                        <IgbTextColumn HeaderText="quantityPerUnit" Field="QuantityPerUnit" IsFilteringEnabled="true"></IgbTextColumn>
                        <IgbNumericColumn HeaderText="unitPrice" Field="UnitPrice" IsFilteringEnabled="true"></IgbNumericColumn>
                        <IgbNumericColumn HeaderText="unitsInStock" Field="UnitsInStock" IsFilteringEnabled="true"></IgbNumericColumn>
                        <IgbNumericColumn HeaderText="unitsOnOrder" Field="UnitsOnOrder" IsFilteringEnabled="true"></IgbNumericColumn>
                        <IgbNumericColumn HeaderText="reorderLevel" Field="ReorderLevel" IsFilteringEnabled="true"></IgbNumericColumn>
                        <IgbTextColumn HeaderText="discontinued" Field="Discontinued" IsFilteringEnabled="true"></IgbTextColumn>
                        <IgbTextColumn HeaderText="name" Field="Name" IsFilteringEnabled="true"></IgbTextColumn>
                    </IgbDataGrid>
                </div>
            </div>
        </div>
        <div class="group_3 column-layout">
            <div class="group_9 row-layout">
                <h6 class="h6">
                    Photos
                </h6>
                <IgbButton Variant="ButtonVariant.Outlined" class="button" dashboard-scope>
                    GO TO ALBUM
                    <IgbRipple></IgbRipple>
                </IgbButton>
            </div>
            <div class="group_5 column-layout">
                <div class="group_15 column-layout">
                    <div class="group_12 row-layout">
                        <div class="group_8 column-layout">
                            @foreach (var item in travelAppImageSet1)
                            {
                                <img src="@item.Image_url" class="image" />
                            }
                        </div>
                        <div class="group_8 column-layout">
                            @foreach (var item in travelAppImageSet2)
                            {
                                <img src="@item.Image_url" class="image" />
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private TravelApp.SelectedArticlesType[] travelAppSelectedArticles = Array.Empty<TravelApp.SelectedArticlesType>();
    private TravelApp.DestinationsType[] travelAppDestinations = Array.Empty<TravelApp.DestinationsType>();
    private Northwind.ProductsType[] northwindProducts = Array.Empty<Northwind.ProductsType>();
    private TravelApp.ImageSet1Type[] travelAppImageSet1 = Array.Empty<TravelApp.ImageSet1Type>();
    private TravelApp.ImageSet2Type[] travelAppImageSet2 = Array.Empty<TravelApp.ImageSet2Type>();

    protected override async Task OnInitializedAsync()
    {
        travelAppSelectedArticles = await HttpClient.GetFromJsonAsync<TravelApp.SelectedArticlesType[]>("static-data/travel-app-selected-articles.json") ?? travelAppSelectedArticles;
        travelAppDestinations = await HttpClient.GetFromJsonAsync<TravelApp.DestinationsType[]>("static-data/travel-app-destinations.json") ?? travelAppDestinations;
        travelAppImageSet1 = await HttpClient.GetFromJsonAsync<TravelApp.ImageSet1Type[]>("static-data/travel-app-image-set-1.json") ?? travelAppImageSet1;
        travelAppImageSet2 = await HttpClient.GetFromJsonAsync<TravelApp.ImageSet2Type[]>("static-data/travel-app-image-set-2.json") ?? travelAppImageSet2;
        northwindProducts = await HttpClient.GetFromJsonAsync<Northwind.ProductsType[]>("static-data/northwind-products.json") ?? northwindProducts;
    }
    private void Navigate(string path)
    {
        NavigationManager.NavigateTo(path);
    }
}
